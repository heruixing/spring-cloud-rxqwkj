server:
  port: 18002
# 数据源配置
spring:
  datasource:
    druid:
      url: jdbc:mysql://${MYSQL_HOST:192.168.7.171}:${MYSQL_PORT:3306}/main-data?useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: "Hrx950815!"
      driver-class-name: com.mysql.jdbc.Driver
      max-active: 20
      initial-size: 1
      max-wait: 60000
      min-idle: 1
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      filters: stat, wall
      # 监控配置
      web-stat-filter:
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        url-pattern: /druid/*
        reset-enable: false
        login-username: sysadmin
        login-password: "000000"

redis:
    cluster:
          nodes:
          - 192.168.7.171:7001
          - 192.168.7.171:7002
          - 192.168.7.171:7003
          max-redirects: 3
    pool:
            max-idle: 500  # 连接池中的最大空闲连接，默认值也是8。
            min-idle: 50  #连接池中的最小空闲连接，默认值也是0。
            max-active: 2000  # 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
            max-wait: 1000  # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
    password: 'Hrx950815!'

rabbitmq:
    host: 192.168.7.171
    port: 5672
    username: guest
    password: 'guest'
# 权限配置
security:
  ignored: |
    /css/**,/js/**,/favicon.ico,/webjars/**,/images/**,
    /hystrix.stream/**,/info,/error,/health,/env,/metrics,/trace,/dump,
    /jolokia,/configprops,/activiti,/logfile,/refresh,/flyway,/liquibase,/loggers,
    /user/name/**,/user/phone/**,/role/user/**,/menu/user/*,/client/all
  oauth2:
    resource:
      jwt:
        key-uri: http://${AUTH_CENTER_HOST:localhost}:${AUTH_CENTER_PORT:18001}/auth/oauth/token_key
      id: ${spring.application.name}
      serviceId: ${spring.application.name}
# mybatis 配置
mybatis:
  type-aliases-package: com.peng.main.api.mapper.model
  mapper-locations: classpath:mybatis/mapper/*.xml
logging:
  file: logs/main-data.log